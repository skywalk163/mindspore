matrix_exp:
    description: |
        Computes the exponential of a single or a batch of square matrices.

        .. math::

            matrix\_exp(x) = \sum_{k=0}^{\infty} \frac{1}{k !} x^{k} \in \mathbb{K}^{n \times n}

        where :math:`x` corresponds to `input` .

        Args:
            input (Tensor): The shape of tensor is :math:`(*, n, n)` where * is zero or more batch dimensions.
                Must be one of the following types: float16, float32, float64, complex64, complex128.

        Returns:
            Tensor, has the same shape and dtype as the `input`.

        Raises:
            TypeError: If `input` is not a Tensor.
            TypeError: If the dtype of `input` is not one of the following dtype:
                    float16, float32, float64, complex64, complex128.
            ValueError: If the rank of `input` is less than 2.
            ValueError: If the size of last two dimensions of `input` are not equal.

        Supported Platforms:


        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> input = Tensor(np.array([[1, 2], [0, 1]]), mindspore.float32)
            >>> output = ops.matrix_exp(input)
            >>> print(output)
            [[2.7182817 5.436563 ]
            [0.        2.7182817]]
