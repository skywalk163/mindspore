ifft:
    description: |
      Calculates the inverse of `fft()`.

      Note:
          - `ifft` is currently only used in `mindscience` scientific computing scenarios and
            dose not support other usage scenarios.
          - `ifft` is not supported on Windows platform yet.

      Args:
          input (Tensor): The input tensor.
              Supported dtypes:

              - Ascend/CPU: int16, int32, int64, float16, float32, float64, complex64, complex128.

          n (int, optional): Length of the transformed `dim` of the result.
              If given, the size of the `dim` axis will be zero-padded or truncated to `n` before calculating `ifft`.
              Default: ``None`` , which does not need to process `input`.
          dim (int, optional): The dimension along which to take the one dimensional `ifft`.
              Default: ``-1`` , which means transform the last dimension of `input`.
          norm (str, optional): Normalization mode. Default: ``None`` that means ``"backward"`` .
              Three modes are defined as,

              - ``"backward"`` (no normalization).
              - ``"forward"`` (normalize by :math:`1*n`).
              - ``"ortho"`` (normalize by :math:`1*\sqrt{n}`).

      Returns:
          Tensor, The result of `ifft()` function.

      Raises:
          TypeError: If the `input` type is not Tensor.
          TypeError: If the `input` data type is not one of: int32, int64, float32, float64, complex64, complex128.
          TypeError: If `n` or `dim` type is not int.
          ValueError: If `dim` is not in the range of "[ `-input.ndim` , `input.ndim` )".
          ValueError: If `n` is less than 1.
          ValueError: If `norm` is none of ``"backward"`` , ``"forward"`` or ``"ortho"`` .

      Supported Platforms:
          ``Ascend`` ``CPU``

      Examples:
          >>> import mindspore
          >>> from mindspore import Tensor, ops
          >>> input = Tensor([ 1.6243454, -0.6117564, -0.5281718, -1.0729686])
          >>> ops.ifft(input)
          Tensor(shape=[4], dtype=Complex64, value= [-0.147138+0j, 0.538129+0.115303j, 0.695225+0j, 0.538129-0.115303j])
