addcdiv:
    description: |
        Adds the element-wise division of `x1` by `x2`, multiplied by `value` to `input_data`.
        It computes the following operation:

        .. math::
            y[i] = input\_data[i] + value[i] * (x1[i] / x2[i])

        Inputs:
            - **input_data** (Tensor) - The tensor to be added.
            - **x1** (Tensor) - The numerator tensor.
            - **x2** (Tensor) - The denominator tensor.
            - **value** (Tensor) - The multiplier for tensor x1/x2.

        Outputs:
            Tensor, has the same shape and dtype as x1/x2.

        Raises:
            TypeError: If dtype of `x1`, `x2`, `value`, `input_data` is not tensor.
            TypeError: If dtype of `x1`, `x2`, `value`, `input_data` are not the same.
            ValueError: If `x1` could not be broadcast to `x2`.
            ValueError: If `value` could not be broadcast to `x1/x2`.
            ValueError: If `input_data` could not be broadcast to `value*(x1/x2)`.

        Supported Platforms:
            ``Ascend`` ``GPU`` ``CPU``

        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> input_data = Tensor(np.array([1, 1, 1, 1]), mindspore.float32)
            >>> x1 = Tensor(np.array([1, 2, 3, 4]), mindspore.float32)
            >>> x2 = Tensor(np.array([4, 3, 2, 1]), mindspore.float32)
            >>> value = Tensor([1], mindspore.float32)
            >>> addcdiv = ops.Addcdiv()
            >>> y = addcdiv(input_data, x1, x2, value)
            >>> print(y)
            [1.25      1.6666667 2.5       5.       ]
