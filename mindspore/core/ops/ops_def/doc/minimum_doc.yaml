minimum:
    description: |
        Computes the minimum of input tensors element-wise.

        Note:
            - Inputs of `input` and `other` comply with the implicit type conversion rules to make the data types
              consistent.
            - When the inputs are two tensors, dtypes of them cannot be bool at the same time.
            - When the inputs are one tensor and one scalar, the scalar could only be a constant.
            - Shapes of them are supposed to be broadcast.
            - If one of the elements being compared is a NaN, then that element is returned.
    
        .. math::
            output_i = \min(input_i, other_i)
    
        Args:
            input (Union[Tensor, Number, bool]): The first input is a number or
                a bool or a tensor whose data type is number or bool.
            other (Union[Tensor, Number, bool]): The second input is a number or
                a bool when the first input is a tensor or a tensor whose data type is number or bool.
    
        Returns:
            Tensor, the shape is the same as the one after broadcasting,
            and the data type is the one with higher precision or higher digits among the two inputs.
    
        Raises:
            TypeError: If `input` and `other` is not one of the following: Tensor, Number, bool.
            ValueError: If `input` and `other` are not the same shape after broadcast.
    
        Supported Platforms:
            ``Ascend`` ``GPU`` ``CPU``
    
        Examples:
            >>> import mindspore
            >>> import numpy as np
            >>> from mindspore import Tensor, ops
            >>> # case 1 : same data type
            >>> input = Tensor(np.array([1.0, 5.0, 3.0]), mindspore.float32)
            >>> other = Tensor(np.array([4.0, 2.0, 6.0]), mindspore.float32)
            >>> output = ops.minimum(input, other)
            >>> print(output)
            [1. 2. 3.]
            >>> # case 2 : different data type
            >>> input = Tensor(np.array([1.0, 5.0, 3.0]), mindspore.int32)
            >>> other = Tensor(np.array([4.0, 2.0, 6.0]), mindspore.float32)
            >>> output = ops.minimum(input, other)
            >>> print(output.dtype)
            Float32
